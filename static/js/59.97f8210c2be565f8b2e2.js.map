{"version":3,"sources":["webpack:///static/js/59.97f8210c2be565f8b2e2.js","webpack:///./src/posts/articles/2013-07-11-aligner-trois-colonnes-proprement.md"],"names":["webpackJsonp","155","module","exports","rawContent","metaData","title","image","date","tags","clients","categories","template","description","disqus","publish"],"mappings":"AAAAA,cAAc,GAAG,IAEXC,IACA,SAASC,EAAQC,GCHvBD,EAAAC,SACAC,WAAA,m7FACAC,UACAC,MAAA,oCACAC,MAAA,0DACAC,KAAA,sBACAC,MACA,YAEAC,SACA,IAEAC,YACA,aAEAC,SAAA,OACAC,YAAA,sLACAC,QAAA,EACAC,SAAA","file":"static/js/59.97f8210c2be565f8b2e2.js","sourcesContent":["webpackJsonp([59,4],{\n\n/***/ 155:\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"rawContent\": \"\\r\\nc’est un problème auquel se confrontent régulièrement les intégrateurs : créer un **design en trois colonnes** — habituellement, deux menus latéraux (appelés \\\"sidebar\\\") et une colonne centrale pour le contenu du site.\\r\\n\\r\\nMais c’est en réalité très simple à faire, et nous allons voir comment.\\r\\n\\r\\n## Le html\\r\\n\\r\\nLa première chose, c’est d’abord de placer les trois colonnes dans un conteneur, que nous appellerons ici \\\"_container_\\\". Ensuite, il faut mettre les éléments flottants (les sidebar donc) avant le corps central.\\r\\n\\r\\n```markup\\r\\n<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"sidebar--left\\\"></div>\\r\\n\\t<div class=\\\"sidebar--right\\\"></div>\\r\\n\\t<div class=\\\"content\\\"></div>\\r\\n</div>\\r\\n```\\r\\n\\r\\nComme toujours, essayez d’ajouter un peu de contenu pour pouvoir voir les effets ; utilisez par exemple le [générateur de lipsum](http://fr.lipsum.com/ \\\"Générateur de lipsum\\\"){ target=\\\"_blank\\\" }.\\r\\n\\r\\n## Le CSS\\r\\n\\r\\nMaintenant, il suffit de mettre en place les éléments :\\r\\n\\r\\n```css\\r\\n.container {\\r\\n\\toverflow: auto;\\r\\n}\\r\\n\\r\\n.sidebar--left {\\r\\n\\twidth: 200px;\\r\\n\\tfloat: left;\\r\\n}\\r\\n\\r\\n.sidebar--right {\\r\\n\\twidth: 200px;\\r\\n\\tfloat: right;\\r\\n}\\r\\n\\r\\n.content {\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n```\\r\\n\\r\\nVoyons ces lignes en détail :\\r\\n\\r\\n```css\\r\\n.container {\\r\\n\\toverflow: auto;\\r\\n}\\r\\n```\\r\\n\\r\\nLes éléments flottants (utilisés avec la propriété `float` donc) sortent du _flux d’éléments_, ce qui conduit les autres éléments à passer en-dessous comme s’ils étaient ignorés. Utiliser une propriété neutre comme `overflow` permet au contenant de tenir compte de ces flottants et de les englober pour que tout rentre dans l’ordre.\\r\\n\\r\\n```css\\r\\n.sidebar--left {\\r\\n\\twidth: 200px;\\r\\n\\tfloat: left;\\r\\n}\\r\\n\\r\\n.sidebar--right {\\r\\n\\twidth: 200px;\\r\\n\\tfloat: right;\\r\\n}\\r\\n```\\r\\n\\r\\nOn place simplement les éléments flottants (les menus latéraux) à gauche et à droite avec la propriété `float`, et on leur attribue une largeur fixe.\\r\\n\\r\\n```css\\r\\n.content {\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n```\\r\\n\\r\\nEnfin, on ne précise aucune largeur à cet élément afin qu’il s’adapte automatiquement à l’espace disponible. Là encore, on use de la propriété `overflow` pour que cette colonne tienne compte des deux éléments flottants.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nAvec cette méthode, si votre design est évolutif ou que la mise en page change (une colonne ou une autre ou bien les deux ou aucune en fonction des pages visitées, par exemple), la colonne centrale sera toujours adaptée correctement, ainsi que son contenu. Vous pouvez voir le gabarit en action et le tester sur [ce pen](http://codepen.io/EmmanuelB/pen/qniHp \\\"CodePen\\\"){ target=\\\"_blank\\\" }.\\r\\n\\r\\nSi vous voulez plus d’explication sur le fonctionnement des flottants et des _overflow_, je vous conseille un bon article : [Le contexte de formatage block en CSS](http://www.alsacreations.com/astuce/lire/1543-le-contexte-de-formatage-block-en-css.html \\\"Alsacréations\\\"){ target=\\\"_blank\\\" }.\\r\\n\",\n\t\t\"metaData\": {\n\t\t\t\"title\": \"Aligner trois colonnes proprement\",\n\t\t\t\"image\": \"https://images.emmanuelbeziat.com/social-default-fb.jpg\",\n\t\t\t\"date\": \"2013-07-11 02:00:08\",\n\t\t\t\"tags\": [\n\t\t\t\t\"html/css\"\n\t\t\t],\n\t\t\t\"clients\": [\n\t\t\t\t\"\"\n\t\t\t],\n\t\t\t\"categories\": [\n\t\t\t\t\"Tutoriels\"\n\t\t\t],\n\t\t\t\"template\": \"post\",\n\t\t\t\"description\": \"c’est un problème auquel se confrontent régulièrement les intégrateurs : créer un design en trois colonnes. Mais c’est en réalité très simple à faire, et nous allons voir comment.\",\n\t\t\t\"disqus\": true,\n\t\t\t\"publish\": true\n\t\t}\n\t};\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** static/js/59.97f8210c2be565f8b2e2.js\n **/","module.exports = {\n\t\"rawContent\": \"\\r\\nc’est un problème auquel se confrontent régulièrement les intégrateurs : créer un **design en trois colonnes** — habituellement, deux menus latéraux (appelés \\\"sidebar\\\") et une colonne centrale pour le contenu du site.\\r\\n\\r\\nMais c’est en réalité très simple à faire, et nous allons voir comment.\\r\\n\\r\\n## Le html\\r\\n\\r\\nLa première chose, c’est d’abord de placer les trois colonnes dans un conteneur, que nous appellerons ici \\\"_container_\\\". Ensuite, il faut mettre les éléments flottants (les sidebar donc) avant le corps central.\\r\\n\\r\\n```markup\\r\\n<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"sidebar--left\\\"></div>\\r\\n\\t<div class=\\\"sidebar--right\\\"></div>\\r\\n\\t<div class=\\\"content\\\"></div>\\r\\n</div>\\r\\n```\\r\\n\\r\\nComme toujours, essayez d’ajouter un peu de contenu pour pouvoir voir les effets ; utilisez par exemple le [générateur de lipsum](http://fr.lipsum.com/ \\\"Générateur de lipsum\\\"){ target=\\\"_blank\\\" }.\\r\\n\\r\\n## Le CSS\\r\\n\\r\\nMaintenant, il suffit de mettre en place les éléments :\\r\\n\\r\\n```css\\r\\n.container {\\r\\n\\toverflow: auto;\\r\\n}\\r\\n\\r\\n.sidebar--left {\\r\\n\\twidth: 200px;\\r\\n\\tfloat: left;\\r\\n}\\r\\n\\r\\n.sidebar--right {\\r\\n\\twidth: 200px;\\r\\n\\tfloat: right;\\r\\n}\\r\\n\\r\\n.content {\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n```\\r\\n\\r\\nVoyons ces lignes en détail :\\r\\n\\r\\n```css\\r\\n.container {\\r\\n\\toverflow: auto;\\r\\n}\\r\\n```\\r\\n\\r\\nLes éléments flottants (utilisés avec la propriété `float` donc) sortent du _flux d’éléments_, ce qui conduit les autres éléments à passer en-dessous comme s’ils étaient ignorés. Utiliser une propriété neutre comme `overflow` permet au contenant de tenir compte de ces flottants et de les englober pour que tout rentre dans l’ordre.\\r\\n\\r\\n```css\\r\\n.sidebar--left {\\r\\n\\twidth: 200px;\\r\\n\\tfloat: left;\\r\\n}\\r\\n\\r\\n.sidebar--right {\\r\\n\\twidth: 200px;\\r\\n\\tfloat: right;\\r\\n}\\r\\n```\\r\\n\\r\\nOn place simplement les éléments flottants (les menus latéraux) à gauche et à droite avec la propriété `float`, et on leur attribue une largeur fixe.\\r\\n\\r\\n```css\\r\\n.content {\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n```\\r\\n\\r\\nEnfin, on ne précise aucune largeur à cet élément afin qu’il s’adapte automatiquement à l’espace disponible. Là encore, on use de la propriété `overflow` pour que cette colonne tienne compte des deux éléments flottants.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nAvec cette méthode, si votre design est évolutif ou que la mise en page change (une colonne ou une autre ou bien les deux ou aucune en fonction des pages visitées, par exemple), la colonne centrale sera toujours adaptée correctement, ainsi que son contenu. Vous pouvez voir le gabarit en action et le tester sur [ce pen](http://codepen.io/EmmanuelB/pen/qniHp \\\"CodePen\\\"){ target=\\\"_blank\\\" }.\\r\\n\\r\\nSi vous voulez plus d’explication sur le fonctionnement des flottants et des _overflow_, je vous conseille un bon article : [Le contexte de formatage block en CSS](http://www.alsacreations.com/astuce/lire/1543-le-contexte-de-formatage-block-en-css.html \\\"Alsacréations\\\"){ target=\\\"_blank\\\" }.\\r\\n\",\n\t\"metaData\": {\n\t\t\"title\": \"Aligner trois colonnes proprement\",\n\t\t\"image\": \"https://images.emmanuelbeziat.com/social-default-fb.jpg\",\n\t\t\"date\": \"2013-07-11 02:00:08\",\n\t\t\"tags\": [\n\t\t\t\"html/css\"\n\t\t],\n\t\t\"clients\": [\n\t\t\t\"\"\n\t\t],\n\t\t\"categories\": [\n\t\t\t\"Tutoriels\"\n\t\t],\n\t\t\"template\": \"post\",\n\t\t\"description\": \"c’est un problème auquel se confrontent régulièrement les intégrateurs : créer un design en trois colonnes. Mais c’est en réalité très simple à faire, et nous allons voir comment.\",\n\t\t\"disqus\": true,\n\t\t\"publish\": true\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/json-loader!./loader/post-loader.js!./src/posts/articles/2013-07-11-aligner-trois-colonnes-proprement.md\n ** module id = 155\n ** module chunks = 59\n **/"],"sourceRoot":""}